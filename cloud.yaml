AWSTemplateFormatVersion: 2010-09-09
Description: AWS Certbot - ACM certbot autorenewal

Parameters:
  BucketName:
    Description: S3 Bucket (Certbot configuration tree and lambda source package)
    Type: String

  ObjectVersion:
    Description: Generated object version
    Type: String

  DomainList:
    Description: List of managed domains (comma separated)
    Type: String

  DomainEmail:
    Description: Email address used in cert request
    Type: String

  CertRenewDays:
    Description: Number of days before cert expiration to request renew
    Type: String
    Default: "20"

Resources:
  AwsCertbotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Allow-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: arn:aws:logs:*:*:*
        - PolicyName: BucketGetPutObject
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource:
                  Fn::Join: ["", ["arn:aws:s3:::", Ref: "BucketName", "/*"]]
        - PolicyName: ACMGetImportCerts
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "acm:DescribeCertificate"
                  - "acm:ListCertificates"
                  - "acm:ImportCertificate"
                Resource: "*"

  AwsCertbotFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.6
      Description: Request and Renew Certs in ACM
      Handler: main.handler
      Role:
        Fn::GetAtt: ["AwsCertbotRole", "Arn"]
      Environment:
        Variables:
          CERTBOT_BUCKET:
            Ref: BucketName
          DOMAIN_EMAIL:
            Ref: DomainEmail
          DOMAIN_LIST:
            Ref: DomainList
          CERTS_RENEW_DAYS_BEFORE_EXPIRATION:
            Ref: CertRenewDays
      Timeout: 120
      MemorySize: 512
      Code:
        S3Bucket:
          Ref: BucketName
        S3Key:
          Fn::Sub: "certbot-${ObjectVersion}.zip"

  AwsCertbotFunctionEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: "Invoke AwsCertbotFunction"
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "AwsCertbotFunction"
              - "Arn"
          Id: "TargetAwsCertbotFunction"

  AwsCertbotFunctionEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "AwsCertbotFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "AwsCertbotFunctionEvent"
          - "Arn"
